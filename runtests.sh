#!/bin/sh

RES="result.txt"
rm -f "$RES"

touch "$RES"

tail -f "$RES" &
TAILPID=$!

exec > "$RES" 2>&1

echo "----> BUILDING TASKS"

make -C task1
make -C task2
make -C task3

echo "====>-----------------------------------------------------------------------"
echo "----> TASK1 TEST"
echo "----> EXPECTED RESULT"
echo "fileA, fileB, fileC and fileD all contain the same data, so OS will report the same logical size for" \
"all of thme. But since fileB, fileC and fileD are sparse files, and fileA is not, by looking at" \
"the amount of allocated blocks on disk via 'stat' and multiplying by block size we can see that "\
"fileB, fileC and fileD take a lot less disk space. fileD takes more disk space due to an unconventional "\
"processing block size. We can also see, that gzip compresses data equally for sparse and non-sparse files."
echo "----> TEST RESULT"

cd task1
./runme.sh

echo "====>-----------------------------------------------------------------------"
echo "----> TASK2 TEST"
echo "----> EXPECTED RESULT"
echo "First test should fail after we delete the lock file in between capture and release. "\
"Next, 10 processes should all take turns (randomly) locking the file for 1 second each, and "\
"end up with approximately the same amount of locks for each process."
echo "----> TEST RESULT"
cd ../task2
./runme.sh

echo "====>-----------------------------------------------------------------------"
echo "----> TASK3 TEST"
echo "----> EXPECTED RESULT"
echo "Program should daemonize and run 3 child processes (from config generated by runme.sh). "\
"Then, after one of the processes is killed, it should restart it. Then, after config is overriten "\
"by runme.sh and SIGHUP is sent, the program should kill all of its child processes and start anew."
echo "----> TEST RESULT"
cd ../task3
./runme.sh

kill -int $TAILPID
